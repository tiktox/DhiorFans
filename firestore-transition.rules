rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ===== REGLAS DE TRANSICIÓN (MÁS PERMISIVAS) =====
    
    // Usuarios - Lectura pública, escritura para propietarios
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && 
        (request.auth.uid == userId || 
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['followers', 'following', 'posts']));
    }
    
    // Posts - Lectura pública, escritura para autenticados
    match /posts/{postId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId ||
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'comments', 'commentsCount']));
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Reels - Lectura pública, escritura para autenticados
    match /reels/{reelId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.userId ||
         request.resource.data.diff(resource.data).affectedKeys().hasOnly(['likes', 'comments', 'commentsCount']));
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Comentarios - Lectura pública, escritura para autenticados
    match /comments/{commentId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Likes - Lectura pública, escritura para autenticados
    match /likes/{likeId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Follows - Lectura pública, escritura para autenticados
    match /follows/{followId} {
      allow read: if true;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.followerId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.followerId;
    }
    
    // Tokens - Lectura pública, escritura para propietarios
    match /tokens/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Transacciones de tokens
    match /tokenTransactions/{transactionId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.userId || 
         ('recipientId' in resource.data && request.auth.uid == resource.data.recipientId));
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Reportes
    match /reports/{reportId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.reporterId;
    }
    
    // Notificaciones
    match /notifications/{notificationId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow create: if request.auth != null;
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Configuraciones de usuario
    match /userSettings/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }
  }
}